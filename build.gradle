group "com.github.izhangzhihao"
version "1.0-SNAPSHOT"

buildscript {
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE")
        //classpath("com.bmuschko:gradle-docker-plugin:3.0.4")
        classpath("se.transmode.gradle:gradle-docker:1.2")
    }
}


allprojects {
}

subprojects {
    apply plugin: "java"
    apply plugin: "org.springframework.boot"
    apply plugin: "idea"
    //apply plugin: "com.bmuschko.docker-remote-api"
    apply plugin: "docker"

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.SR7"
        }
    }

    sourceCompatibility = 1.8

    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        jcenter()
        mavenCentral()
    }

    [compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

    dependencies {

        compile(
                "org.springframework.boot:spring-boot-starter-web",
                "org.springframework.boot:spring-boot-starter-actuator",

                "org.springframework.cloud:spring-cloud-starter-eureka",
        )


        testCompile(
                "junit:junit:4.12",
                "org.springframework.boot:spring-boot-starter-test",
        )
    }

    task buildDocker(type: Docker, dependsOn: build) {
        //def projectName = project.name.toLowerCase()
        def projectName = "izhangzhihao"
        def jarName = jar.baseName.toLowerCase()
        maintainer = "izhangzhihao@hotmail.com"
        //tag = "api-gateway"
        //push = true
        //applicationName = jarName
        tag = "$projectName/$jarName"
        dockerfile = file('src/main/docker/Dockerfile')
        doFirst {
            copy {
                from jar
                into stageDir
            }
        }
    }
}
